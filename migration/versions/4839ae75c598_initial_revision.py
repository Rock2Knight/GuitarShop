"""Initial revision

Revision ID: 4839ae75c598
Revises: 
Create Date: 2025-05-31 18:12:13.054857

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4839ae75c598'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('combo_amplifier',
    sa.Column('combo_type', sa.Enum('BULB', 'TRANSISTOR', name='comboamplifiertype'), nullable=False),
    sa.Column('effects', sa.String(), nullable=False),
    sa.Column('channels_count', sa.Integer(), nullable=False),
    sa.Column('power', sa.Float(), nullable=True),
    sa.Column('product_type', sa.Enum('GUITAR', 'COMBO_AMPLIFIER', 'PROCCESSOR', 'EFFECT_PEDAL', name='producttype'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('effect_pedal',
    sa.Column('effect', sa.String(), nullable=False),
    sa.Column('product_type', sa.Enum('GUITAR', 'COMBO_AMPLIFIER', 'PROCCESSOR', 'EFFECT_PEDAL', name='producttype'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('guitar',
    sa.Column('guitar_type', sa.Enum('ACOUSTIC', 'ELECTRIC', 'BASS', 'BARITONE', name='guitartype'), nullable=False),
    sa.Column('shape', sa.Enum('CLASSIC', 'LES_PAUL', 'STRATOCASTER', 'TELECASTER', 'SUPERSTRAT', 'EXPLORER', 'SG', 'PRS', 'FLYING_V', 'MOCKINGBIRD', 'WARLOCK', 'RR', 'STAR', 'ICEMAN', 'FIREBIRD', 'JAGUAR', 'MUSTANG', 'JAG_STANG', name='guitarshape'), nullable=True),
    sa.Column('fret_count', sa.Integer(), nullable=False),
    sa.Column('recorder_config', sa.String(), nullable=True),
    sa.Column('fingerboard_material', sa.String(), nullable=False),
    sa.Column('body_material', sa.String(), nullable=False),
    sa.Column('product_type', sa.Enum('GUITAR', 'COMBO_AMPLIFIER', 'PROCCESSOR', 'EFFECT_PEDAL', name='producttype'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('processor',
    sa.Column('express_pedal', sa.Boolean(), nullable=False),
    sa.Column('instrument_type', sa.String(), nullable=False),
    sa.Column('screen_type', sa.String(), nullable=False),
    sa.Column('product_type', sa.Enum('GUITAR', 'COMBO_AMPLIFIER', 'PROCCESSOR', 'EFFECT_PEDAL', name='producttype'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('passhash', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('passhash'),
    sa.UniqueConstraint('username')
    )
    op.create_table('cart',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'IN_PROGRESS', 'COMPLETED', 'CANCELED', name='orderstatus'), nullable=False),
    sa.Column('order_date', sa.Date(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cart_product',
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('guitar_id', sa.Integer(), nullable=True),
    sa.Column('combo_id', sa.Integer(), nullable=True),
    sa.Column('processor_id', sa.Integer(), nullable=True),
    sa.Column('effect_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['cart.id'], ),
    sa.ForeignKeyConstraint(['combo_id'], ['combo_amplifier.id'], ),
    sa.ForeignKeyConstraint(['effect_id'], ['effect_pedal.id'], ),
    sa.ForeignKeyConstraint(['guitar_id'], ['guitar.id'], ),
    sa.ForeignKeyConstraint(['processor_id'], ['processor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_product',
    sa.Column('guitar_id', sa.Integer(), nullable=True),
    sa.Column('combo_id', sa.Integer(), nullable=True),
    sa.Column('processor_id', sa.Integer(), nullable=True),
    sa.Column('effect_id', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['combo_id'], ['combo_amplifier.id'], ),
    sa.ForeignKeyConstraint(['effect_id'], ['effect_pedal.id'], ),
    sa.ForeignKeyConstraint(['guitar_id'], ['guitar.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['processor_id'], ['processor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_product')
    op.drop_table('cart_product')
    op.drop_table('order')
    op.drop_table('cart')
    op.drop_table('user')
    op.drop_table('processor')
    op.drop_table('guitar')
    op.drop_table('effect_pedal')
    op.drop_table('combo_amplifier')
    # ### end Alembic commands ###
